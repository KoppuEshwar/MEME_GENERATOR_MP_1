import * as React from 'react';
export interface ReactDynamicFontProps {
    content?: string;
    smooth?: boolean;
}
interface ReactDynamicFontState {
    scale: number;
}
export declare class ReactDynamicFont extends React.Component<ReactDynamicFontProps, ReactDynamicFontState> {
    static retryDelayMillisecond: number;
    static maxRetryTimes: number;
    state: ReactDynamicFontState;
    spanRef: React.RefObject<HTMLSpanElement>;
    componentDidMount(): void;
    componentDidUpdate(prevProps: ReactDynamicFontProps): void;
    getMaxWidth: () => number;
    getCurrentWidth: () => number;
    setRetryTimmer(): void;
    retryTimmer: number | null;
    timesOfRetryGetWidth: number;
    fixWidth: () => void;
    render(): JSX.Element;
}
export {};
